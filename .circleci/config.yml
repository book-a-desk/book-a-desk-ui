version: 2.1

orbs:
  node: circleci/node@3.0.0
  aws-cli: circleci/aws-cli@1.3.0
  aws-s3: circleci/aws-s3@1.0.16
  
parameters:
  s3-bucket-dev:
      type: string
      default: book-a-desk-ui-2
      
commands:
  authenticate-aws-book-a-desk-dev:
    description: "Configure AWS credentials for Book A Desk Dev"
    steps:
      - run:
          name: "Initialize BASH_ENV variables"
          command: |
            echo "export AWS_ACCESS_KEY_ID=${AWS_DEV_ACCESS_KEY_ID}" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=${AWS_DEV_SECRET_ACCESS_KEY}" >> $BASH_ENV
            
  aws-cloudformation-deploy:
    parameters:
      update-cdn:
        type: boolean
        default: false
      authenticate-aws:
        type: steps
      s3-bucket-name:
        type: string
    steps:
      - steps: << parameters.authenticate-aws >>
      - run:
          name: Ensure infrastructure is up to date <<# parameters.update-cdn >>and update the CDN origin<</ parameters.update-cdn >>
          command: |
            aws cloudformation deploy \
              --parameter-overrides "S3Bucket=<< parameters.s3-bucket-name >>" <<# parameters.update-cdn >>"SHA1=${CIRCLE_SHA1}"<</ parameters.update-cdn >> \
              --stack-name book-a-desk-ui \
              --template-file ./infra/cf.yaml \
              --capabilities CAPABILITY_NAMED_IAM
  

jobs:
  build-and-unit-test:
    docker:
      - image: cimg/node:15.8.0
    parameters:
      api-url:
        type: string
    steps:
      - checkout
      - run:
          name: Install npm packages
          command: npm install
      - run:
          name: Unit test
          command: npm run test
      - run:
          name: Build
          command: |
            export VUE_APP_BASE_API_URL=<< parameters.api-url >>
            npm run build
      - store_test_results:
          path: ./reports/
      - persist_to_workspace:
          root: ./dist
          paths:
            - ./*

  deploy-cloudformation:
    executor: aws-cli/default
    parameters:
      update-cdn:
        type: boolean
        default: false
      authenticate-aws:
        type: steps
      s3-bucket-name:
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
      - aws-cloudformation-deploy:
          update-cdn: << parameters.update-cdn >>
          authenticate-aws: << parameters.authenticate-aws >>
          s3-bucket-name: << parameters.s3-bucket-name >>
          
  publish-to-s3:
    docker:
      - image: cimg/python:3.6
    parameters:
      destination-path:
        type: string
#      authenticate-aws:
#        type: steps
      s3-bucket-name:
        type: string
    steps:
      - attach_workspace:
            at: ./
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
#      - steps: << parameters.authenticate-aws >>
      - run: ls -R
      - aws-s3/sync:
          arguments: --acl public-read
          from: ./
          overwrite: false
          to: s3://<< parameters.s3-bucket-name >>/<< parameters.destination-path >>
          aws-region: AWS_DEFAULT_REGION

workflows:
  pull-request:
    when:
      equal: ['trunk', << pipeline.git.branch >>]
    jobs:
      - build-and-unit-test:
          api-url: ${BOOK_A_DESK_BASE_API_URL_DEV}
  release:
    unless:
      equal: ['trunk', << pipeline.git.branch >>]
    jobs:
      - build-and-unit-test:
          api-url: ${BOOK_A_DESK_BASE_API_URL_DEV}
      - deploy-cloudformation:
          name: deploy-cloudformation-dev
          authenticate-aws:
            - authenticate-aws-book-a-desk-dev
          update-cdn: false
          s3-bucket-name: << pipeline.parameters.s3-bucket-dev >>
          requires:
            - build-and-unit-test
      - publish-to-s3:
          name: publish-to-dev
          destination-path: ${CIRCLE_SHA1}
#          authenticate-aws:
#            - authenticate-aws-book-a-desk-dev
          s3-bucket-name: << pipeline.parameters.s3-bucket-dev >>
          requires:
            - build-and-unit-test
            - deploy-cloudformation-dev
      - deploy-cloudformation:
          name: update-cloudfront-dev
          authenticate-aws:
            - authenticate-aws-book-a-desk-dev
          update-cdn: true
          s3-bucket-name: << pipeline.parameters.s3-bucket-dev >>
          requires:
            - publish-to-dev
#      - build-assets-test:
#          requires:
#            - publish-to-s3-dev
#      - build-assets-prod:
#          requires:
#            - publish-to-s3-tes
