version: 2.1

orbs:
  node: circleci/node@3.0.0
  aws-cli: circleci/aws-cli@1.3.0
  aws-s3: circleci/aws-s3@1.0.16

jobs:
  build-assets-dev:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: NPM install
          command: npm install
      - run:
          name: NPM Build Project
          command: |
            export VUE_APP_SHA1=${CIRCLE_SHA1};
            export VUE_APP_BASE_API_URL=${BOOK_A_DESK_BASE_API_URL_DEV}
            npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - ./dist/*
              
  build-assets-test:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: NPM install
          command: npm install
      - run:
          name: NPM Build Project
          command: |
            export VUE_APP_SHA1=${CIRCLE_SHA1};
            export VUE_APP_BASE_API_URL=${BOOK_A_DESK_BASE_API_URL_TEST}
            npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - ./dist/*

  build-assets-prod:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: NPM install
          command: npm install
      - run:
          name: NPM Build Project
          command: |
            export VUE_APP_SHA1=${CIRCLE_SHA1};
            export VUE_APP_BASE_API_URL=${BOOK_A_DESK_BASE_API_URL_PROD}
            npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - ./dist/*

  deploy-infra-dev:
    executor: aws-cli/default

    steps:
      - checkout
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: Ensure infrastructure is up to date
          command: |
            aws cloudformation deploy \
              --stack-name book-a-desk-ui-dev \
              --template-file ./infra/cf.yaml \
              --capabilities CAPABILITY_NAMED_IAM
              --parameter-overrides s3bucketname=dev.book-a-desk.broadsign.net

  deploy-infra-test:
    executor: aws-cli/default

    steps:
      - checkout
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: Ensure infrastructure is up to date
          command: |
            aws cloudformation deploy \
              --stack-name book-a-desk-ui-test \
              --template-file ./infra/cf.yaml \
              --capabilities CAPABILITY_NAMED_IAM
              --parameter-overrides Env=test

  deploy-infra-prod:
    executor: aws-cli/default

    steps:
      - checkout
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: Ensure infrastructure is up to date
          command: |
            aws cloudformation deploy \
              --stack-name book-a-desk-ui-prod \
              --template-file ./infra/cf.yaml \
              --capabilities CAPABILITY_NAMED_IAM
              --parameter-overrides Env=prod

  publish-to-s3-dev:
    docker:
      - image: cimg/python:3.6
    steps:
      - attach_workspace:
          at: ./
      - run: ls -R dist/*
      - aws-s3/sync:
          arguments: --acl public-read
          from: ./dist/
          overwrite: false
          to: s3://dev.book-a-desk.broadsign.net/${CIRCLE_SHA1}
          aws-region: AWS_DEFAULT_REGION

  publish-to-s3-test:
    docker:
      - image: cimg/python:3.6
    steps:
      - attach_workspace:
          at: ./
      - run: ls -R dist/*
      - aws-s3/sync:
          arguments: --acl public-read
          from: ./dist/
          overwrite: false
          to: s3://<< pipeline.parameters.s3-bucket >>-Test/${CIRCLE_SHA1}
          aws-region: AWS_DEFAULT_REGION

  publish-to-s3-prod:
    docker:
      - image: cimg/python:3.6
    steps:
      - attach_workspace:
          at: ./
      - run: ls -R dist/*
      - aws-s3/sync:
          arguments: --acl public-read
          from: ./dist/
          overwrite: false
          to: s3://<< pipeline.parameters.s3-bucket >>-Prod/${CIRCLE_SHA1}
          aws-region: AWS_DEFAULT_REGION

workflows:
  node-tests:
    unless:
      equal: ['trunk', << pipeline.git.branch >>]
    jobs:
      - node/test
  release:
    when:
      equal: ['trunk', << pipeline.git.branch >>]
    jobs:
      - node/test
      - build-assets-dev:
          requires:
            - node/test
      - deploy-infra-dev:
          requires:
            - node/test
      - publish-to-s3-dev:
          requires:
            - deploy-infra-dev
            - build-assets-dev
#      - build-assets-test:
#          requires:
#            - publish-to-s3-dev
#      - deploy-infra-test:
#          requires:
#            - node/test
#      - publish-to-s3-test:
#          requires:
#            - deploy-infra-test
#            - build-assets-test
#      - build-assets-prod:
#          requires:
#            - publish-to-s3-test
#      - deploy-infra-prod:
#          requires:
#            - node/test
#      - publish-to-s3-prod:
#          requires:
#            - deploy-infra-prod
#            - build-assets-prod
